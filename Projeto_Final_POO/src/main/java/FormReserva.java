// Higor Silva Fernandes
// RA: 2313898

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Aluno
 */
public class FormReserva extends javax.swing.JFrame {
    
    private static FormReserva instancia;
    private boolean modoEdicao = false;
    private int indiceDaReserva;
    private FormsRelatorio telaRelatorio;
    /**
     * Creates new form FormReserva
     */
    private FormReserva() { // Construtor PRIVADO
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
    }
    
    //MÉTODO SINGLETON
    public static FormReserva getInstancia() {
        if (instancia == null) {
            instancia = new FormReserva();
        }
        return instancia;
    }
    
    // Este método substitui o construtor de edição
    public void prepararParaAlterar(Reserva reserva, int indice) {
        this.modoEdicao = true;
        this.indiceDaReserva = indice;
        this.setTitle("Alterar Reserva");
        btSalv.setText("Confirmar Alteração");

        // Preenche os campos
        txtNomMorad.setText(reserva.getMorador().getNome());
        txtNumApartm.setText(reserva.getMorador().getApartamento());
        txtDataRes.setText(reserva.getData());
        
        // Seleciona o espaço
        String nomeSimplesClasse = reserva.getEspacoLazer().getClass().getSimpleName();
        if (nomeSimplesClasse.equalsIgnoreCase("SalaoFestas")) {
            jComboBox1.setSelectedItem("Salão de Festa");
        } else {
            jComboBox1.setSelectedItem(nomeSimplesClasse);
        }
    }
    
    // Método para resetar o formulário para o modo de criação
    private void resetarParaCriacao() {
        this.modoEdicao = false;
        this.setTitle("Fazer Reserva");
        btSalv.setText("Salvar");
        limparCampos();
    }
    
    public FormReserva(Reserva reserva, int indice, FormsRelatorio telaRelatorio) {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        this.modoEdicao = true;
        this.indiceDaReserva = indice;
        this.telaRelatorio = telaRelatorio;

        // Muda o título da janela e o texto do botão para refletir a ação de alterar
        this.setTitle("Alterar Reserva");
        btSalv.setText("Confirmar Alteração");

        // Preenche os campos do formulário com os dados da reserva selecionada
        txtNomMorad.setText(reserva.getMorador().getNome());
        txtNumApartm.setText(reserva.getMorador().getApartamento());
        txtDataRes.setText(reserva.getData());

        // Seleciona o espaço de lazer correto no ComboBox
        String nomeSimplesClasse = reserva.getEspacoLazer().getClass().getSimpleName();
        if (nomeSimplesClasse.equalsIgnoreCase("Piscina")) {
            jComboBox1.setSelectedItem("Piscina");
        } else if (nomeSimplesClasse.equalsIgnoreCase("Churrasqueira")) {
            jComboBox1.setSelectedItem("Churrasqueira");
        } else if (nomeSimplesClasse.equalsIgnoreCase("SalaoFestas")) {
            jComboBox1.setSelectedItem("Salão de Festa");
        } else {
            jComboBox1.setSelectedItem("Espaco Lazer");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rtNomMorad = new javax.swing.JLabel();
        txtNomMorad = new javax.swing.JTextField();
        rtApartm = new javax.swing.JLabel();
        txtNumApartm = new javax.swing.JTextField();
        rtDataRes = new javax.swing.JLabel();
        txtDataRes = new javax.swing.JTextField();
        rtEsp = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        btSalv = new javax.swing.JButton();
        btCanc = new javax.swing.JButton();
        btSai = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        rtNomMorad.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rtNomMorad.setText("Nome:");

        rtApartm.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rtApartm.setText("Apartamento:");

        rtDataRes.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rtDataRes.setText("Data da Reserva: (dd/mm/aaaa)");

        rtEsp.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rtEsp.setText("Espaço");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Piscina", "Churrasqueira", "Salão de Festa", "Espaco Lazer" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        btSalv.setText("Salvar");
        btSalv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvActionPerformed(evt);
            }
        });

        btCanc.setText("Cancelar");
        btCanc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancActionPerformed(evt);
            }
        });

        btSai.setText("Sair");
        btSai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rtApartm)
                            .addComponent(rtNomMorad, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtNomMorad, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNumApartm, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rtEsp, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(btSalv)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btCanc))
                            .addComponent(rtDataRes, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDataRes, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btSai)
                                .addGap(9, 9, 9)))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rtNomMorad)
                    .addComponent(txtNomMorad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rtApartm)
                    .addComponent(txtNumApartm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rtDataRes)
                    .addComponent(txtDataRes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rtEsp)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSalv)
                    .addComponent(btCanc)
                    .addComponent(btSai))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void btSalvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvActionPerformed
        try {
        String espacoSelecionado = (String) jComboBox1.getSelectedItem();
        EspacoLazer espaco = null;

        switch (espacoSelecionado) {
            case "Piscina":
                // Você pode adicionar construtores específicos se precisar
                // passar parâmetros como profundidade, etc.
                espaco = new Piscina(); 
                break;
            case "Churrasqueira":
                espaco = new Churrasqueira();
                break;
            case "Salão de Festa": // Lembre-se que o item no ComboBox é "Salão de Festa"
                espaco = new SalaoFestas();
                break;
            case "Espaco Lazer":
                espaco = new EspacoLazer();
                break;
            default:
                // É uma boa prática tratar um caso padrão
                throw new Exception("Tipo de espaço inválido selecionado.");
        }

        if (modoEdicao) {
            Reserva reservaExistente = BDReserva.getInstancia().getReservaByIndex(indiceDaReserva);
            reservaExistente.getMorador().setNome(txtNomMorad.getText());
            reservaExistente.getMorador().setApartamento(txtNumApartm.getText());
            reservaExistente.setData(txtDataRes.getText());
            reservaExistente.setEspacoLazer(espaco); // Agora 'espaco' terá o objeto correto!

            BDReserva.getInstancia().updateReserva(indiceDaReserva, reservaExistente);
            
            // Atualiza a tabela no formulário de relatório.
            FormsRelatorio.getInstancia().carregarTabela(); 
            
             javax.swing.JOptionPane.showMessageDialog(this, "Cadastro alterado com sucesso!!", "Sucesso", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            this.dispose();
            resetarParaCriacao();

        } else {
            Morador novoMorador = new Morador();
            novoMorador.setNome(txtNomMorad.getText());
            novoMorador.setApartamento(txtNumApartm.getText());

            Reserva novaReserva = new Reserva();
            novaReserva.setMorador(novoMorador);
            novaReserva.setData(txtDataRes.getText());
            novaReserva.setEspacoLazer(espaco); // 'espaco' também terá o objeto correto aqui!

            BDReserva.getInstancia().addReserva(novaReserva);
            
            javax.swing.JOptionPane.showMessageDialog(this, "Cadastro realizado com sucesso!!", "Sucesso", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
            limparCampos();
        }

    } catch (EntradaInvalidaException e) {
        javax.swing.JOptionPane.showMessageDialog(this, e.getMessage(), "Erro de Entrada", javax.swing.JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Ocorreu um erro inesperado: " + e.getMessage(), "Erro", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btSalvActionPerformed

    private void btCancActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancActionPerformed
        // TODO add your handling code here:
        limparCampos();
    }//GEN-LAST:event_btCancActionPerformed
    
    // Método auxiliar para limpar os campos
        private void limparCampos() {
            txtNomMorad.setText("");
            txtNumApartm.setText("");
            txtDataRes.setText("");
            jComboBox1.setSelectedIndex(0);
        }
        
    private void btSaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaiActionPerformed
        // TODO add your handling code here:
        resetarParaCriacao(); // Garante que, ao reabrir, estará no modo de criação
        this.dispose();
    }//GEN-LAST:event_btSaiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FormReserva().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCanc;
    private javax.swing.JButton btSai;
    private javax.swing.JButton btSalv;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel rtApartm;
    private javax.swing.JLabel rtDataRes;
    private javax.swing.JLabel rtEsp;
    private javax.swing.JLabel rtNomMorad;
    private javax.swing.JTextField txtDataRes;
    private javax.swing.JTextField txtNomMorad;
    private javax.swing.JTextField txtNumApartm;
    // End of variables declaration//GEN-END:variables
}
